{"version":3,"sources":["js/components/Header/index.js","js/components/Main/Info.js","js/components/Main/BookingForm.js","js/components/Main/Booking.js","js/components/Main/index.js","js/index.js"],"names":["Header","headingText","header","document","createElement","classList","add","innerHTML","SearchIcon","dateFormater","dateString","date","Date","toLocaleString","undefined","year","month","day","Info","movieImages","base","transformersSpoiler","small","transformersSpoilerSmall","medium","transformersSpoilerMedium","large","transformersSpoilerLarge","movieInfo","releaseDate","movieTitle","director","startDate","imdb","rottenTometoes","info","formatedReleaseDate","formatedStartDate","Seat","rowId","id","seat","mockedSeats","SeatRow","seats","seatRow","setAttribute","seatRowFragment","createDocumentFragment","append","map","mockedSeatRows","BookingSeats","seatRows","bookingSeats","bookingSeatsFragment","SeatsInfo","seatsInfo","SubmitButton","submitButtonWrapper","submitButton","SelectedSeats","selectedSeats","updateSeatsScreen","selectedSeatsScreen","getElementById","selectedSeatsFragment","forEach","row","BookingForm","state","setState","newState","getSeatData","selectedSeat","dataset","bookingForm","addEventListener","target","type","checked","filteredSeats","filter","selectedRow","selectedSeatId","removeSeat","Screen","screen","Booking","booking","Main","main","App","window","console","debug"],"mappings":"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","file":"js.b7b322d0.js","sourceRoot":"../src","sourcesContent":["import SearchIcon from '../../../assets/svg/search.svg';\n\nexport const Header = ({ headingText = 'TicketNew' } = {}) => {\n    const header = document.createElement('header');\n    header.classList.add('header');\n    header.innerHTML = `\n        <div class=\"headingWrapper\">\n            <h2 class=\"heading\">${headingText}</h2>\n            <button class=\"searchButton\">\n                <img\n                  src=${SearchIcon}\n                  alt=\"searchIcon\"\n                  class=\"searchButtonIcon\"\n                />\n            </button>\n        </div>\n        <nav class=\"nav\">\n            <ul class=\"navList\">\n                <li class=\"navListItem\">\n                    <a href=\"#\" class=\"navLink\">Select your movie</a>\n                </li>\n                <li class=\"navListItem\">\n                    <a href=\"#\" class=\"navLink --current\">Select seating</a>\n                </li>\n                <li class=\"navListItem\">\n                    <a href=\"#\" class=\"navLink\">Payment</a>\n                </li>\n            </ul>\n        </nav>`;\n    return header;\n};\n","import transformersSpoiler from '../../../assets/spoilers/transformers.jpg';\nimport transformersSpoilerSmall from '../../../assets/spoilers/transformers_360.jpg';\nimport transformersSpoilerMedium from '../../../assets/spoilers/transformers_720.jpg';\nimport transformersSpoilerLarge from '../../../assets/spoilers/transformers_1080.jpg';\n\nconst dateFormater = (dateString) => {\n    const date = new Date(dateString);\n    const options = {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n    };\n    return date.toLocaleString(undefined, options);\n};\n\nexport const Info = ({\n    movieImages = {\n        base: transformersSpoiler,\n        small: transformersSpoilerSmall,\n        medium: transformersSpoilerMedium,\n        large: transformersSpoilerLarge,\n    },\n    movieInfo: {\n        releaseDate = '2017-07-22T00:00:00.000Z',\n        movieTitle = 'Transformers: The Last Knight',\n        director = 'Michael Bay',\n        startDate = '2017-07-22T00:00:00.000Z',\n        imdb = 7.4,\n        rottenTometoes = 6.7,\n    } = {},\n} = {}) => {\n    const info = document.createElement('article');\n    info.classList.add('info');\n\n    const formatedReleaseDate = dateFormater(releaseDate);\n    const formatedStartDate = dateFormater(startDate);\n\n    info.innerHTML = `\n        <h2 class=\"movieTitle\">${movieTitle}</h2>\n        <div class=\"infoWrapper\">\n          <div class=\"movieImageWrapper\">\n            <img\n              src=${movieImages.base}\n              srcset=\"\n                ${movieImages.small}   360w,\n                ${movieImages.medium}   720w,\n                ${movieImages.large} 1080w\n              \"\n              sizes=\"(max-width: 360px) 25vw, (max-width: 767px) 25vw, (min-width: 768px) 50vw\"\n              alt=\"${movieTitle} spoiler\"\n              class=\"movieImage\"\n            />\n          </div>\n          <section class=\"description\">\n            <dl class=\"descriptionList\">\n              <dt>Release date</dt>\n              <dd><time datetime=\"${formatedReleaseDate}\">${formatedReleaseDate}</time></dd>\n              <dt>Title</dt>\n              <dd>${movieTitle}</dd>\n              <dt>Director</dt>\n              <dd>${director}</dd>\n              <dt>Start date</dt>\n              <dd><time datetime=\"${formatedStartDate}\">${formatedStartDate}</time></dd>\n              <dt>IMDB</dt>\n              <dd>${imdb}</dd>\n              <dt>Rotten Tomatoes</dt>\n              <dd>${rottenTometoes}</dd>\n            </dl>\n          </section>\n        </div>`;\n    return info;\n};\n","const Seat = ({ rowId, id }) => {\n    const seat = document.createElement('seat');\n    seat.classList.add('seat');\n    seat.innerHTML = `\n        <input\n          type=\"checkbox\"\n          id=\"seat:${rowId}-${id}\"\n          class=\"seatCheckbox visuallyHidden\"\n          data-row=\"${rowId}\" data-seat=\"${id}\"\n        />\n        <label for=\"seat:${rowId}-${id}\" class=\"seatLabel\"></label>\n    `;\n    return seat;\n};\n\nconst mockedSeats = [1, 2, 3, 4, 5];\nconst SeatRow = ({ rowId, seats = mockedSeats } = {}) => {\n    const seatRow = document.createElement('li');\n    seatRow.classList.add('seatRow');\n    seatRow.setAttribute('id', `seatRow:${rowId}`);\n    const seatRowFragment = document.createDocumentFragment();\n    seatRowFragment.append(...seats.map((id) => Seat({ rowId, id })));\n    seatRow.append(seatRowFragment);\n    return seatRow;\n};\n\nconst mockedSeatRows = [1, 2, 3, 4, 5, 6];\nconst BookingSeats = ({ seatRows = mockedSeatRows } = {}) => {\n    const bookingSeats = document.createElement('ol');\n    bookingSeats.classList.add('seats');\n    const bookingSeatsFragment = document.createDocumentFragment();\n    bookingSeatsFragment.append(...seatRows.map((rowId) => SeatRow({ rowId })));\n    bookingSeats.append(bookingSeatsFragment);\n    return bookingSeats;\n};\n\nconst SeatsInfo = () => {\n    const seatsInfo = document.createElement('div');\n    seatsInfo.classList.add('seatsInfo');\n    seatsInfo.innerHTML = `\n        <div class=\"seat\">\n          <label class=\"seatLabel\">\n            <p class=\"seatLabelInfo\">- Available</p>\n          </label>\n        </div>\n        <div class=\"seat\">\n          <label class=\"seatLabel --purchased\">\n            <p class=\"seatLabelInfo\">- Purchased</p>\n          </label>\n        </div>\n        <div class=\"seat\">\n          <label class=\"seatLabel --reserved\">\n            <p class=\"seatLabelInfo\">- Reserved</p>\n          </label>\n        </div>\n        <div class=\"seat\">\n          <label class=\"seatLabel --selected\">\n            <p class=\"seatLabelInfo\">- Selected</p>\n          </label>\n        </div>\n    `;\n    return seatsInfo;\n};\n\nconst SubmitButton = () => {\n    const submitButtonWrapper = document.createElement('div');\n    submitButtonWrapper.classList.add('submitButtonWrapper');\n    const submitButton = document.createElement('button');\n    submitButton.setAttribute('type', 'button');\n    submitButton.classList.add('submitButton');\n    submitButton.innerHTML = 'Book seats';\n    submitButtonWrapper.append(submitButton);\n    return submitButtonWrapper;\n};\n\nconst SelectedSeats = () => {\n    const selectedSeats = document.createElement('div');\n    selectedSeats.setAttribute('id', 'selectedSeats');\n    return selectedSeats;\n};\n\nconst updateSeatsScreen = (selectedSeats) => {\n    const selectedSeatsScreen = document.getElementById('selectedSeats');\n    const selectedSeatsFragment = document.createDocumentFragment();\n    selectedSeats.forEach((seat) => {\n        const info = `Row: ${seat.row}; Seat: ${seat.seat};`;\n        selectedSeatsFragment.append(info);\n    });\n    selectedSeatsScreen.innerHTML = '';\n    selectedSeatsScreen.append(selectedSeatsFragment);\n};\n\nexport const BookingForm = () => {\n    let state = {\n        selectedSeats: [],\n    };\n\n    const setState = (newState) => {\n        state = { ...newState };\n    };\n\n    const getSeatData = (selectedSeat) => {\n        const { row, seat } = selectedSeat.dataset;\n        return { row, seat };\n    };\n\n    const addSeat = (selectedSeat) => {\n        setState({\n            selectedSeats: [...state.selectedSeats, getSeatData(selectedSeat)],\n        });\n    };\n\n    const removeSeat = (selectedSeat) => {\n        const filteredSeats = state.selectedSeats.filter((seat) => {\n            const { row: selectedRow, seat: selectedSeatId } = getSeatData(\n                selectedSeat\n            );\n            return (\n                `${seat.row}${seat.seat}` !== `${selectedRow}${selectedSeatId}`\n            );\n        });\n        setState({ selectedSeats: filteredSeats });\n    };\n\n    const handleSeatSelect = ({ target }) => {\n        if (target.type !== 'checkbox') return;\n        if (target.checked) addSeat(target);\n        else removeSeat(target);\n        updateSeatsScreen(state.selectedSeats);\n    };\n\n    const bookingForm = document.createElement('form');\n    bookingForm.setAttribute('id', 'bookingSeats');\n    bookingForm.append(\n        BookingSeats(),\n        SeatsInfo(),\n        SelectedSeats(),\n        SubmitButton()\n    );\n\n    bookingForm.addEventListener('change', handleSeatSelect);\n    return bookingForm;\n};\n","import { BookingForm } from './BookingForm';\n\nconst Screen = () => {\n    const screen = document.createElement('div');\n    screen.classList.add('screen');\n    return screen;\n};\n\nexport const Booking = () => {\n    const booking = document.createElement('section');\n    booking.classList.add('booking');\n    booking.append(Screen(), BookingForm());\n    return booking;\n};\n","import { Info } from './Info';\nimport { Booking } from './Booking';\n\nexport const Main = () => {\n    const main = document.createElement('main');\n    main.classList.add('main');\n    main.append(Info(), Booking());\n    return main;\n};\n","import { Header } from './components/Header';\nimport { Main } from './components/Main';\n\nconst App = () => {\n    const root = document.getElementById('root');\n    root.append(Header(), Main());\n};\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    console.debug('App started');\n    App();\n});\n"]}